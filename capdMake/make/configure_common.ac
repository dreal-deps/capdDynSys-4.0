
###########
# AC_PREFIX_DEFAULT(/usr/local/)

AC_LANG([C++])
AC_ARG_WITH([top_capd],
	[AS_HELP_STRING([--with-top_capd=<path>],
           [path to top capd directory @<:@default=../@:>@])],
        [top_capd=$withval],
	[top_capd=${default_top_capd}])

AC_SUBST(top_capd)

capdMake=${PWD}/${top_capd}/capdMake
capd_src_dir=${PWD}/${top_capd}
capd_build_dir=${PWD}/${top_capd_build}

AC_SUBST(capdMake)
AC_SUBST(capd_src_dir)
AC_SUBST(capd_build_dir)

AC_CHECK_FILE([${capdMake}], [], [
			     AC_MSG_ERROR([could not find capdMake in ${top_capd}. Set --top_capd to a direcotry where you have capdMake. There we will put binaries and libraries])
			     exit -1])

pkg_config_dev="${PWD}/${top_capd_build}/lib/pkgconfig-dev"
pkg_config_install="${PWD}/${top_capd_build}/lib/pkgconfig-install"


if test ! -d ${pkg_config_dev}; then
   mkdir -p ${pkg_config_dev}
fi

if test ! -d ${pkg_config_install}; then
   mkdir -p ${pkg_config_install}
fi


pkg_config_dev=`cd ${pkg_config_dev}; pwd`
pkg_config_install=`cd ${pkg_config_install}; pwd`


pkg_config_path_var="PKG_CONFIG_PATH"
# for cross platform compilation we need to compute real PKG_CONFIG_PATH variable name
AS_IF([ test "${host_alias}" = "i686-pc-mingw32" ],
      [ pkg_config_path_var="PKG_CONFIG_PATH_i686_pc_mingw32"], [])
AS_IF([ test "${host_alias}" = "x86_64-w64-mingw32" ],
      [ pkg_config_path_var="PKG_CONFIG_PATH_x86_64_w64_mingw32"], [])
AS_IF([ test "${host_alias}" = "i686-w64-mingw32" ],
      [ pkg_config_path_var="PKG_CONFIG_PATH_i686_w64_mingw32"], [])


AS_IF([ test "x${!pkg_config_path_var}" = "x" ],
	          [ export ${pkg_config_path_var}="${pkg_config_dev}"],
	          [ export ${pkg_config_path_var}="${pkg_config_dev}${PATH_SEPARATOR}${!pkg_config_path_var}"])

echo "Exporting ${pkg_config_path_var} as ${!pkg_config_path_var}"


AC_SUBST(PKG_CONFIG_DIR,[\${libdir}/pkgconfig])
AC_SUBST(PKG_CONFIG_DEV_DIR,[${pkg_config_dev}])




#
# !!!!!!!!!
#
# Our own AM_SANITY_CHECK. Generated by autoreconf is too slow (with sleep 1 - what for?).
#
# AM_SANITY_CHECK
# ---------------
AC_DEFUN([AM_SANITY_CHECK],
[AC_MSG_CHECKING([whether build environment is sane (CAPD implementation)])

#
# Our implementation do not sleep and if it is a problem, then sleep as in original version.
#

echo timestamp > conftest.file
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: `$srcdir']);;
esac

# Do `set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
   if test "$[*]" = "X"; then
      # -L didn't work.
      set X `ls -t "$srcdir/configure" conftest.file`
   fi
   rm -f conftest.file
   if test "$[*]" != "X $srcdir/configure conftest.file" \
      && test "$[*]" != "X conftest.file $srcdir/configure"; then

      # If neither matched, then we have a broken ls.  This can happen
      # if, for instance, CONFIG_SHELL is bash and it inherits a
      # broken ls alias from the environment.  This has actually
      # happened.  Such a system could not be considered "sane".
      AC_MSG_WARN([ls -t appears to fail.  Make sure there is not a broken
alias in your environment])
   fi

   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_WARN([newly created file is older than distributed files!
Check your system clock])


sleep 1
echo timestamp > conftest.file

if (
   set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
   if test "$[*]" = "X"; then
      # -L didn't work.
      set X `ls -t "$srcdir/configure" conftest.file`
   fi
   rm -f conftest.file
   if test "$[*]" != "X $srcdir/configure conftest.file" \
      && test "$[*]" != "X conftest.file $srcdir/configure"; then

      # If neither matched, then we have a broken ls.  This can happen
      # if, for instance, CONFIG_SHELL is bash and it inherits a
      # broken ls alias from the environment.  This has actually
      # happened.  Such a system could not be considered "sane".
      AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
alias in your environment])
   fi

   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi


fi
AC_MSG_RESULT(yes)])



AM_INIT_AUTOMAKE([foreign dist-zip no-define subdir-objects])
AM_PROG_CC_C_O

AM_SILENT_RULES([yes])

if test "${enable_maintainer_mode+set}" != "set"; then
   if test -e "${capdMake}/../.svn" || test -e "${capdMake}/../.git"; then
      enable_maintainer_mode=yes
   fi
fi

AM_MAINTAINER_MODE


#########
